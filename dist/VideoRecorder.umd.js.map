{"version":3,"file":"VideoRecorder.umd.js","sources":["../src/VideoRecorder.ts"],"sourcesContent":["import {\n  VideoRecorderOptions,\n  RecordingResult,\n  RecordingState,\n  RecordingStats,\n} from \"./types\";\n\nexport  class VideoRecorder {\n  private mediaRecorder: MediaRecorder | null = null;\n  private stream: MediaStream | null = null;\n  private chunks: Blob[] = [];\n  private options: VideoRecorderOptions;\n  private previewElement: HTMLVideoElement | null = null;\n  private recordingStartTime: number = 0;\n  private recordingState: RecordingState = \"inactive\";\n\n  constructor(options: VideoRecorderOptions = {}) {\n    this.options = {\n      mimeType: this.getBestMimeType(),\n      videoBitsPerSecond: options.videoBitsPerSecond || 2500000,\n      audioBitsPerSecond: options.audioBitsPerSecond || 128000,\n      width: options.width || 1280,\n      height: options.height || 720\n    };\n  }\n\n  public async startPreview(\n    previewElement: HTMLVideoElement,\n    constraints: MediaStreamConstraints\n  ): Promise<boolean> {\n    try {\n      await this.stopStream();\n      \n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      this.stream = stream;\n      this.previewElement = previewElement;\n      \n      if (this.previewElement) {\n        this.previewElement.srcObject = stream;\n        this.previewElement.muted = true;\n        await this.previewElement.play();\n      }\n      \n      return true;\n    } catch (error) {\n      console.error('Error starting preview:', error);\n      return false;\n    }\n  }\n\n  public async startRecording(constraints: MediaStreamConstraints): Promise<boolean> {\n    try {\n      \n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      this.stream = stream;\n\n    \n      if (this.previewElement) {\n        this.previewElement.srcObject = stream;\n      }\n\n      \n      this.mediaRecorder = new MediaRecorder(stream, {\n        mimeType: this.options.mimeType,\n        videoBitsPerSecond: this.options.videoBitsPerSecond,\n        audioBitsPerSecond: this.options.audioBitsPerSecond\n      });\n\n      this.chunks = [];\n      this.mediaRecorder.ondataavailable = (e) => {\n        if (e.data.size > 0) {\n          this.chunks.push(e.data);\n        }\n      };\n\n      this.recordingStartTime = Date.now();\n      this.recordingState = \"recording\";\n      this.mediaRecorder.start(1000); // Start recording with 1 seconds chunks\n      return true;\n    } catch (error) {\n      console.error('Error starting recording:', error);\n      return false;\n    }\n  }\n\n  public async switchDevice(constraints: MediaStreamConstraints): Promise<boolean> {\n    try {\n      await this.stopStream();\n      \n      \n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      this.stream = stream;\n\n      \n      if (this.previewElement) {\n        this.previewElement.srcObject = stream;\n        await this.previewElement.play();\n      }\n\n      \n      if (this.mediaRecorder?.state === 'recording') {\n        const recordedChunks = this.chunks;\n        \n        this.mediaRecorder = new MediaRecorder(stream, {\n          mimeType: this.options.mimeType,\n          videoBitsPerSecond: this.options.videoBitsPerSecond,\n          audioBitsPerSecond: this.options.audioBitsPerSecond\n        });\n\n        this.chunks = recordedChunks;\n        this.mediaRecorder.ondataavailable = (e) => {\n          if (e.data.size > 0) {\n            this.chunks.push(e.data);\n          }\n        };\n\n        this.mediaRecorder.start(1000);\n      }\n\n      return true;\n    } catch (error) {\n      console.error('Error switching device:', error);\n      return false;\n    }\n  }\n\n  private async stopStream(): Promise<void> {\n    if (this.mediaRecorder?.state === 'recording') {\n      this.mediaRecorder.stop();\n    }\n    \n    if (this.stream) {\n      this.stream.getTracks().forEach(track => track.stop());\n    }\n  }\n\n  public async stopRecording(): Promise<RecordingResult> {\n    return new Promise((resolve, reject) => {\n      if (!this.mediaRecorder) {\n        reject(new Error('No MediaRecorder instance found'));\n        return;\n      }\n\n      this.mediaRecorder.onstop = () => {\n        const blob = new Blob(this.chunks, { type: this.options.mimeType });\n        const endTime = Date.now();\n        const duration = endTime - this.recordingStartTime;\n        \n        this.chunks = [];\n        this.recordingState = \"inactive\";\n        \n        resolve({\n          blob,\n          duration,\n          size: blob.size\n        });\n      };\n\n      try {\n        this.mediaRecorder.stop();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  public getMediaStream(): MediaStream | null {\n    return this.stream;\n  }\n\n  public isRecording(): boolean {\n    return this.mediaRecorder?.state === 'recording';\n  }\n\n  public saveVideo(blob: Blob, filename: string): void {\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    document.body.appendChild(a);\n    a.style.display = 'none';\n    a.href = url;\n    a.download = filename;\n    a.click();\n    URL.revokeObjectURL(url);\n    document.body.removeChild(a);\n  }\n\n  public getRecordingStats(): RecordingStats {\n    return {\n      startTime: this.recordingStartTime,\n      endTime: this.recordingState === \"recording\" ? null : Date.now(),\n      duration: this.recordingState === \"recording\" ? Date.now() - this.recordingStartTime : 0,\n      state: this.recordingState,\n      mimeType: this.getBestMimeType(),\n      size: this.chunks.reduce((total, chunk) => total + chunk.size, 0)\n    };\n  }\n\n  public getRecordingState(): RecordingState {\n    return this.recordingState;\n  }\n\n  private getBestMimeType(): string {\n    const types = [\n      'video/webm;codecs=vp9,opus',\n      'video/webm;codecs=vp8,opus',\n      'video/webm',\n    ];\n\n    for (const type of types) {\n      if (MediaRecorder.isTypeSupported(type)) {\n        return type;\n      }\n    }\n\n    return '';\n  }\n\n  public static isSupported(): boolean {\n    return !!(navigator.mediaDevices &&\n      navigator.mediaDevices.getUserMedia &&\n      window.MediaRecorder);\n  }\n\n  public static async getDevices(): Promise<{\n    audioDevices: MediaDeviceInfo[];\n    videoDevices: MediaDeviceInfo[];\n  }> {\n    try {\n      await navigator.mediaDevices.getUserMedia({ audio: true, video: true });\n      \n      const devices = await navigator.mediaDevices.enumerateDevices();\n      return {\n        audioDevices: devices.filter(device => device.kind === 'audioinput'),\n        videoDevices: devices.filter(device => device.kind === 'videoinput')\n      };\n    } catch (error) {\n      console.error('Error getting devices:', error);\n      return { audioDevices: [], videoDevices: [] };\n    }\n  }\n}\n\nexport * from \"./types\";\n"],"names":[],"mappings":"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"}